{"ast":null,"code":"import { QueryObserver } from \"./queryObserver.mjs\";\nimport { hasNextPage, hasPreviousPage, infiniteQueryBehavior } from \"./infiniteQueryBehavior.mjs\";\nexport class InfiniteQueryObserver extends QueryObserver {\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    super.setOptions({ ...options,\n      behavior: infiniteQueryBehavior()\n    }, notifyOptions);\n  }\n\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n\n  fetchNextPage() {\n    let {\n      pageParam,\n      ...options\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  fetchPreviousPage() {\n    let {\n      pageParam,\n      ...options\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  createResult(query, options) {\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n    const {\n      state\n    } = query;\n    const result = super.createResult(query, options);\n    return { ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage: state.fetchStatus === 'fetching' && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n      isFetchingPreviousPage: state.fetchStatus === 'fetching' && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n    };\n  }\n\n}","map":{"version":3,"names":["QueryObserver","hasNextPage","hasPreviousPage","infiniteQueryBehavior","InfiniteQueryObserver","constructor","client","options","bindMethods","fetchNextPage","bind","fetchPreviousPage","setOptions","notifyOptions","behavior","getOptimisticResult","pageParam","fetch","meta","fetchMore","direction","createResult","query","_state$data","_state$data2","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","state","result","data","pages","isFetchingNextPage","fetchStatus","fetchMeta","isFetchingPreviousPage"],"sources":["/home/king-longs/Desktop/final/node_modules/react-query/lib/core/infiniteQueryObserver.mjs"],"sourcesContent":["import { QueryObserver } from \"./queryObserver.mjs\";\nimport { hasNextPage, hasPreviousPage, infiniteQueryBehavior } from \"./infiniteQueryBehavior.mjs\";\nexport class InfiniteQueryObserver extends QueryObserver {\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    super.setOptions({ ...options,\n      behavior: infiniteQueryBehavior()\n    }, notifyOptions);\n  }\n\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n\n  fetchNextPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  createResult(query, options) {\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n    const {\n      state\n    } = query;\n    const result = super.createResult(query, options);\n    return { ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage: state.fetchStatus === 'fetching' && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n      isFetchingPreviousPage: state.fetchStatus === 'fetching' && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n    };\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}