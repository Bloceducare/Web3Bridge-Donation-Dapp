{"ast":null,"code":"import React from 'react';\nimport { hydrate } from \"../core/index.mjs\";\nimport { useQueryClient } from \"./QueryClientProvider.mjs\";\nexport function useHydrate(state) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const optionsRef = React.useRef(options);\n  optionsRef.current = options; // Running hydrate again with the same queries is safe,\n  // it wont overwrite or initialize existing queries,\n  // relying on useMemo here is only a performance optimization.\n  // hydrate can and should be run *during* render here for SSR to work properly\n\n  React.useMemo(() => {\n    if (state) {\n      hydrate(queryClient, state, optionsRef.current);\n    }\n  }, [queryClient, state]);\n}\nexport const Hydrate = _ref => {\n  let {\n    children,\n    options,\n    state\n  } = _ref;\n  useHydrate(state, options);\n  return children;\n};","map":{"version":3,"names":["React","hydrate","useQueryClient","useHydrate","state","options","queryClient","context","optionsRef","useRef","current","useMemo","Hydrate","children"],"sources":["/home/king-longs/Desktop/final/node_modules/react-query/lib/reactjs/Hydrate.mjs"],"sourcesContent":["import React from 'react';\nimport { hydrate } from \"../core/index.mjs\";\nimport { useQueryClient } from \"./QueryClientProvider.mjs\";\nexport function useHydrate(state, options = {}) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const optionsRef = React.useRef(options);\n  optionsRef.current = options; // Running hydrate again with the same queries is safe,\n  // it wont overwrite or initialize existing queries,\n  // relying on useMemo here is only a performance optimization.\n  // hydrate can and should be run *during* render here for SSR to work properly\n\n  React.useMemo(() => {\n    if (state) {\n      hydrate(queryClient, state, optionsRef.current);\n    }\n  }, [queryClient, state]);\n}\nexport const Hydrate = ({\n  children,\n  options,\n  state\n}) => {\n  useHydrate(state, options);\n  return children;\n};"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAAyC;EAAA,IAAdC,OAAc,uEAAJ,EAAI;EAC9C,MAAMC,WAAW,GAAGJ,cAAc,CAAC;IACjCK,OAAO,EAAEF,OAAO,CAACE;EADgB,CAAD,CAAlC;EAGA,MAAMC,UAAU,GAAGR,KAAK,CAACS,MAAN,CAAaJ,OAAb,CAAnB;EACAG,UAAU,CAACE,OAAX,GAAqBL,OAArB,CAL8C,CAKhB;EAC9B;EACA;EACA;;EAEAL,KAAK,CAACW,OAAN,CAAc,MAAM;IAClB,IAAIP,KAAJ,EAAW;MACTH,OAAO,CAACK,WAAD,EAAcF,KAAd,EAAqBI,UAAU,CAACE,OAAhC,CAAP;IACD;EACF,CAJD,EAIG,CAACJ,WAAD,EAAcF,KAAd,CAJH;AAKD;AACD,OAAO,MAAMQ,OAAO,GAAG,QAIjB;EAAA,IAJkB;IACtBC,QADsB;IAEtBR,OAFsB;IAGtBD;EAHsB,CAIlB;EACJD,UAAU,CAACC,KAAD,EAAQC,OAAR,CAAV;EACA,OAAOQ,QAAP;AACD,CAPM"},"metadata":{},"sourceType":"module"}