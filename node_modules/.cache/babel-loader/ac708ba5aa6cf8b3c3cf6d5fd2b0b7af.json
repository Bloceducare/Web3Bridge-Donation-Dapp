{"ast":null,"code":"import { _ as _classPrivateMethodInitSpec, f as _defineProperty, j as _classPrivateMethodGet, g as _classPrivateFieldInitSpec, i as _classPrivateFieldSet, h as _classPrivateFieldGet } from '../../../dist/base-4c248b82.esm.js';\nimport { I as InjectedConnector } from '../../../dist/client-e01209d5.esm.js';\nimport 'eventemitter3';\nimport '../../../dist/chains-42648bc5.esm.js';\nimport '../../../dist/rpcs-7cfbd91c.esm.js';\nimport 'ethers';\nimport 'zustand/vanilla';\nimport 'zustand/middleware';\nimport 'ethers/lib/utils';\n\nvar _provider = /*#__PURE__*/new WeakMap();\n\nvar _getReady = /*#__PURE__*/new WeakSet();\n\nvar _findProvider = /*#__PURE__*/new WeakSet();\n\nclass MetaMaskConnector extends InjectedConnector {\n  constructor() {\n    let {\n      chains,\n      options: options_\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const options = {\n      name: 'MetaMask',\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      ...options_\n    };\n    super({\n      chains,\n      options\n    });\n\n    _classPrivateMethodInitSpec(this, _findProvider);\n\n    _classPrivateMethodInitSpec(this, _getReady);\n\n    _defineProperty(this, \"id\", 'metaMask');\n\n    _defineProperty(this, \"ready\", typeof window != 'undefined' && !!_classPrivateMethodGet(this, _findProvider, _findProvider2).call(this, window.ethereum));\n\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n  }\n\n  async getProvider() {\n    if (typeof window !== 'undefined') {\n      // TODO: Fallback to `ethereum#initialized` event for async injection\n      // https://github.com/MetaMask/detect-provider#synchronous-and-asynchronous-injection=\n      _classPrivateFieldSet(this, _provider, _classPrivateMethodGet(this, _findProvider, _findProvider2).call(this, window.ethereum));\n    }\n\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n}\n\nfunction _getReady2(ethereum) {\n  const isMetaMask = !!(ethereum !== null && ethereum !== void 0 && ethereum.isMetaMask);\n  if (!isMetaMask) return; // Brave tries to make itself look like MetaMask\n  // Could also try RPC `web3_clientVersion` if following is unreliable\n\n  if (ethereum.isBraveWallet && !ethereum._events && !ethereum._state) return;\n  if (ethereum.isTokenary) return;\n  return ethereum;\n}\n\nfunction _findProvider2(ethereum) {\n  if (ethereum !== null && ethereum !== void 0 && ethereum.providers) return ethereum.providers.find(_classPrivateMethodGet(this, _getReady, _getReady2));\n  return _classPrivateMethodGet(this, _getReady, _getReady2).call(this, ethereum);\n}\n\nexport { MetaMaskConnector };","map":{"version":3,"names":["_","_classPrivateMethodInitSpec","f","_defineProperty","j","_classPrivateMethodGet","g","_classPrivateFieldInitSpec","i","_classPrivateFieldSet","h","_classPrivateFieldGet","I","InjectedConnector","_provider","WeakMap","_getReady","WeakSet","_findProvider","MetaMaskConnector","constructor","chains","options","options_","arguments","length","undefined","name","shimDisconnect","shimChainChangedDisconnect","window","_findProvider2","call","ethereum","writable","value","getProvider","_getReady2","isMetaMask","isBraveWallet","_events","_state","isTokenary","providers","find"],"sources":["/home/king-longs/Desktop/final/node_modules/@wagmi/core/connectors/metaMask/dist/wagmi-core-connectors-metaMask.esm.js"],"sourcesContent":["import { _ as _classPrivateMethodInitSpec, f as _defineProperty, j as _classPrivateMethodGet, g as _classPrivateFieldInitSpec, i as _classPrivateFieldSet, h as _classPrivateFieldGet } from '../../../dist/base-4c248b82.esm.js';\nimport { I as InjectedConnector } from '../../../dist/client-e01209d5.esm.js';\nimport 'eventemitter3';\nimport '../../../dist/chains-42648bc5.esm.js';\nimport '../../../dist/rpcs-7cfbd91c.esm.js';\nimport 'ethers';\nimport 'zustand/vanilla';\nimport 'zustand/middleware';\nimport 'ethers/lib/utils';\n\nvar _provider = /*#__PURE__*/new WeakMap();\n\nvar _getReady = /*#__PURE__*/new WeakSet();\n\nvar _findProvider = /*#__PURE__*/new WeakSet();\n\nclass MetaMaskConnector extends InjectedConnector {\n  constructor() {\n    let {\n      chains,\n      options: options_\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const options = {\n      name: 'MetaMask',\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      ...options_\n    };\n    super({\n      chains,\n      options\n    });\n\n    _classPrivateMethodInitSpec(this, _findProvider);\n\n    _classPrivateMethodInitSpec(this, _getReady);\n\n    _defineProperty(this, \"id\", 'metaMask');\n\n    _defineProperty(this, \"ready\", typeof window != 'undefined' && !!_classPrivateMethodGet(this, _findProvider, _findProvider2).call(this, window.ethereum));\n\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n  }\n\n  async getProvider() {\n    if (typeof window !== 'undefined') {\n      // TODO: Fallback to `ethereum#initialized` event for async injection\n      // https://github.com/MetaMask/detect-provider#synchronous-and-asynchronous-injection=\n      _classPrivateFieldSet(this, _provider, _classPrivateMethodGet(this, _findProvider, _findProvider2).call(this, window.ethereum));\n    }\n\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n}\n\nfunction _getReady2(ethereum) {\n  const isMetaMask = !!(ethereum !== null && ethereum !== void 0 && ethereum.isMetaMask);\n  if (!isMetaMask) return; // Brave tries to make itself look like MetaMask\n  // Could also try RPC `web3_clientVersion` if following is unreliable\n\n  if (ethereum.isBraveWallet && !ethereum._events && !ethereum._state) return;\n  if (ethereum.isTokenary) return;\n  return ethereum;\n}\n\nfunction _findProvider2(ethereum) {\n  if (ethereum !== null && ethereum !== void 0 && ethereum.providers) return ethereum.providers.find(_classPrivateMethodGet(this, _getReady, _getReady2));\n  return _classPrivateMethodGet(this, _getReady, _getReady2).call(this, ethereum);\n}\n\nexport { MetaMaskConnector };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}