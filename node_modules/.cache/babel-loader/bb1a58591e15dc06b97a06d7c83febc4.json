{"ast":null,"code":"import { b as Connector, _ as _classPrivateMethodInitSpec, f as _defineProperty, g as _classPrivateFieldInitSpec, n as normalizeChainId, j as _classPrivateMethodGet, U as UserRejectedRequestError, h as _classPrivateFieldGet, i as _classPrivateFieldSet, e as SwitchChainError } from '../../../dist/base-4c248b82.esm.js';\nimport { providers } from 'ethers';\nimport { getAddress, hexValue } from 'ethers/lib/utils';\nimport { g as getClient } from '../../../dist/client-e01209d5.esm.js';\nimport { a as allChains } from '../../../dist/chains-42648bc5.esm.js';\nimport 'eventemitter3';\nimport 'zustand/vanilla';\nimport 'zustand/middleware';\nimport '../../../dist/rpcs-7cfbd91c.esm.js';\n/**\n * Wallets that support chain switching through WalletConnect\n * - imToken (token.im)\n * - MetaMask (metamask.io)\n * - Rainbow (rainbow.me)\n */\n\nconst switchChainAllowedRegex = /(imtoken|metamask|rainbow)/i;\n\nvar _provider = /*#__PURE__*/new WeakMap();\n\nvar _switchChain = /*#__PURE__*/new WeakSet();\n\nclass WalletConnectConnector extends Connector {\n  constructor(config) {\n    super(config);\n\n    _classPrivateMethodInitSpec(this, _switchChain);\n\n    _defineProperty(this, \"id\", 'walletConnect');\n\n    _defineProperty(this, \"name\", 'WalletConnect');\n\n    _defineProperty(this, \"ready\", true);\n\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit('disconnect');else this.emit('change', {\n        account: getAddress(accounts[0])\n      });\n    });\n\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit('change', {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n\n    _defineProperty(this, \"onDisconnect\", () => {\n      this.emit('disconnect');\n    });\n  }\n\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      var _provider$connector$p, _provider$connector, _provider$connector$p2;\n\n      let targetChainId = chainId;\n\n      if (!targetChainId) {\n        const lastUsedChainId = getClient().lastUsedChainId;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) targetChainId = lastUsedChainId;\n      }\n\n      const provider = await this.getProvider({\n        chainId: targetChainId,\n        create: true\n      });\n      provider.on('accountsChanged', this.onAccountsChanged);\n      provider.on('chainChanged', this.onChainChanged);\n      provider.on('disconnect', this.onDisconnect); // Defer message to the next tick to ensure wallet connect data (provided by `.enable()`) is available\n\n      setTimeout(() => this.emit('message', {\n        type: 'connecting'\n      }), 0);\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id); // Not all WalletConnect options support programmatic chain switching\n      // Only enable for wallet options that do\n\n      const walletName = (_provider$connector$p = (_provider$connector = provider.connector) === null || _provider$connector === void 0 ? void 0 : (_provider$connector$p2 = _provider$connector.peerMeta) === null || _provider$connector$p2 === void 0 ? void 0 : _provider$connector$p2.name) !== null && _provider$connector$p !== void 0 ? _provider$connector$p : '';\n      if (switchChainAllowedRegex.test(walletName)) this.switchChain = _classPrivateMethodGet(this, _switchChain, _switchChain2);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/user closed modal/i.test(error.message)) throw new UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    const provider = await this.getProvider();\n    await provider.disconnect();\n    provider.removeListener('accountsChanged', this.onAccountsChanged);\n    provider.removeListener('chainChanged', this.onChainChanged);\n    provider.removeListener('disconnect', this.onDisconnect);\n    typeof localStorage !== 'undefined' && localStorage.removeItem('walletconnect');\n  }\n\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = provider.accounts; // return checksum address\n\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n\n  async getProvider() {\n    var _this$options, _this$chains$;\n\n    let {\n      chainId = ((_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.chainId) || ((_this$chains$ = this.chains[0]) === null || _this$chains$ === void 0 ? void 0 : _this$chains$.id),\n      create = false\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!_classPrivateFieldGet(this, _provider) || create) {\n      var _this$options2, _this$options3;\n\n      const rpc = !((_this$options2 = this.options) !== null && _this$options2 !== void 0 && _this$options2.infuraId) ? this.chains.reduce((rpc, chain) => ({ ...rpc,\n        [chain.id]: chain.rpcUrls.default\n      }), {}) : {};\n      const WalletConnectProvider = (await import('@walletconnect/ethereum-provider')).default;\n\n      _classPrivateFieldSet(this, _provider, new WalletConnectProvider({ ...this.options,\n        chainId,\n        rpc: { ...rpc,\n          ...((_this$options3 = this.options) === null || _this$options3 === void 0 ? void 0 : _this$options3.rpc)\n        }\n      }));\n    }\n\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n  async getSigner() {\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n}\n\nasync function _switchChain2(chainId) {\n  const provider = await this.getProvider();\n  const id = hexValue(chainId);\n\n  try {\n    var _chains$find;\n\n    await provider.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId: id\n      }]\n    });\n    const chains = [...this.chains, ...allChains];\n    return (_chains$find = chains.find(x => x.id === chainId)) !== null && _chains$find !== void 0 ? _chains$find : {\n      id: chainId,\n      name: \"Chain \".concat(id),\n      network: \"\".concat(id),\n      rpcUrls: {\n        default: ''\n      }\n    };\n  } catch (error) {\n    const message = typeof error === 'string' ? error : error === null || error === void 0 ? void 0 : error.message;\n    if (/user rejected request/i.test(message)) throw new UserRejectedRequestError(error);\n    throw new SwitchChainError(error);\n  }\n}\n\nexport { WalletConnectConnector };","map":{"version":3,"names":["b","Connector","_","_classPrivateMethodInitSpec","f","_defineProperty","g","_classPrivateFieldInitSpec","n","normalizeChainId","j","_classPrivateMethodGet","U","UserRejectedRequestError","h","_classPrivateFieldGet","i","_classPrivateFieldSet","e","SwitchChainError","providers","getAddress","hexValue","getClient","a","allChains","switchChainAllowedRegex","_provider","WeakMap","_switchChain","WeakSet","WalletConnectConnector","constructor","config","writable","value","accounts","length","emit","account","chainId","id","unsupported","isChainUnsupported","chain","connect","arguments","undefined","_provider$connector$p","_provider$connector","_provider$connector$p2","targetChainId","lastUsedChainId","provider","getProvider","create","on","onAccountsChanged","onChainChanged","onDisconnect","setTimeout","type","enable","getChainId","walletName","connector","peerMeta","name","test","switchChain","_switchChain2","Web3Provider","error","message","disconnect","removeListener","localStorage","removeItem","getAccount","_this$options","_this$chains$","options","chains","_this$options2","_this$options3","rpc","infuraId","reduce","rpcUrls","default","WalletConnectProvider","getSigner","Promise","all","isAuthorized","_chains$find","request","method","params","find","x","concat","network"],"sources":["/home/king-longs/Desktop/final/node_modules/@wagmi/core/connectors/walletConnect/dist/wagmi-core-connectors-walletConnect.esm.js"],"sourcesContent":["import { b as Connector, _ as _classPrivateMethodInitSpec, f as _defineProperty, g as _classPrivateFieldInitSpec, n as normalizeChainId, j as _classPrivateMethodGet, U as UserRejectedRequestError, h as _classPrivateFieldGet, i as _classPrivateFieldSet, e as SwitchChainError } from '../../../dist/base-4c248b82.esm.js';\nimport { providers } from 'ethers';\nimport { getAddress, hexValue } from 'ethers/lib/utils';\nimport { g as getClient } from '../../../dist/client-e01209d5.esm.js';\nimport { a as allChains } from '../../../dist/chains-42648bc5.esm.js';\nimport 'eventemitter3';\nimport 'zustand/vanilla';\nimport 'zustand/middleware';\nimport '../../../dist/rpcs-7cfbd91c.esm.js';\n\n/**\n * Wallets that support chain switching through WalletConnect\n * - imToken (token.im)\n * - MetaMask (metamask.io)\n * - Rainbow (rainbow.me)\n */\n\nconst switchChainAllowedRegex = /(imtoken|metamask|rainbow)/i;\n\nvar _provider = /*#__PURE__*/new WeakMap();\n\nvar _switchChain = /*#__PURE__*/new WeakSet();\n\nclass WalletConnectConnector extends Connector {\n  constructor(config) {\n    super(config);\n\n    _classPrivateMethodInitSpec(this, _switchChain);\n\n    _defineProperty(this, \"id\", 'walletConnect');\n\n    _defineProperty(this, \"name\", 'WalletConnect');\n\n    _defineProperty(this, \"ready\", true);\n\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit('disconnect');else this.emit('change', {\n        account: getAddress(accounts[0])\n      });\n    });\n\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit('change', {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n\n    _defineProperty(this, \"onDisconnect\", () => {\n      this.emit('disconnect');\n    });\n  }\n\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      var _provider$connector$p, _provider$connector, _provider$connector$p2;\n\n      let targetChainId = chainId;\n\n      if (!targetChainId) {\n        const lastUsedChainId = getClient().lastUsedChainId;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) targetChainId = lastUsedChainId;\n      }\n\n      const provider = await this.getProvider({\n        chainId: targetChainId,\n        create: true\n      });\n      provider.on('accountsChanged', this.onAccountsChanged);\n      provider.on('chainChanged', this.onChainChanged);\n      provider.on('disconnect', this.onDisconnect); // Defer message to the next tick to ensure wallet connect data (provided by `.enable()`) is available\n\n      setTimeout(() => this.emit('message', {\n        type: 'connecting'\n      }), 0);\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id); // Not all WalletConnect options support programmatic chain switching\n      // Only enable for wallet options that do\n\n      const walletName = (_provider$connector$p = (_provider$connector = provider.connector) === null || _provider$connector === void 0 ? void 0 : (_provider$connector$p2 = _provider$connector.peerMeta) === null || _provider$connector$p2 === void 0 ? void 0 : _provider$connector$p2.name) !== null && _provider$connector$p !== void 0 ? _provider$connector$p : '';\n      if (switchChainAllowedRegex.test(walletName)) this.switchChain = _classPrivateMethodGet(this, _switchChain, _switchChain2);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/user closed modal/i.test(error.message)) throw new UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    const provider = await this.getProvider();\n    await provider.disconnect();\n    provider.removeListener('accountsChanged', this.onAccountsChanged);\n    provider.removeListener('chainChanged', this.onChainChanged);\n    provider.removeListener('disconnect', this.onDisconnect);\n    typeof localStorage !== 'undefined' && localStorage.removeItem('walletconnect');\n  }\n\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = provider.accounts; // return checksum address\n\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n\n  async getProvider() {\n    var _this$options, _this$chains$;\n\n    let {\n      chainId = ((_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.chainId) || ((_this$chains$ = this.chains[0]) === null || _this$chains$ === void 0 ? void 0 : _this$chains$.id),\n      create = false\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!_classPrivateFieldGet(this, _provider) || create) {\n      var _this$options2, _this$options3;\n\n      const rpc = !((_this$options2 = this.options) !== null && _this$options2 !== void 0 && _this$options2.infuraId) ? this.chains.reduce((rpc, chain) => ({ ...rpc,\n        [chain.id]: chain.rpcUrls.default\n      }), {}) : {};\n      const WalletConnectProvider = (await import('@walletconnect/ethereum-provider')).default;\n\n      _classPrivateFieldSet(this, _provider, new WalletConnectProvider({ ...this.options,\n        chainId,\n        rpc: { ...rpc,\n          ...((_this$options3 = this.options) === null || _this$options3 === void 0 ? void 0 : _this$options3.rpc)\n        }\n      }));\n    }\n\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n  async getSigner() {\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n}\n\nasync function _switchChain2(chainId) {\n  const provider = await this.getProvider();\n  const id = hexValue(chainId);\n\n  try {\n    var _chains$find;\n\n    await provider.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId: id\n      }]\n    });\n    const chains = [...this.chains, ...allChains];\n    return (_chains$find = chains.find(x => x.id === chainId)) !== null && _chains$find !== void 0 ? _chains$find : {\n      id: chainId,\n      name: \"Chain \".concat(id),\n      network: \"\".concat(id),\n      rpcUrls: {\n        default: ''\n      }\n    };\n  } catch (error) {\n    const message = typeof error === 'string' ? error : error === null || error === void 0 ? void 0 : error.message;\n    if (/user rejected request/i.test(message)) throw new UserRejectedRequestError(error);\n    throw new SwitchChainError(error);\n  }\n}\n\nexport { WalletConnectConnector };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}