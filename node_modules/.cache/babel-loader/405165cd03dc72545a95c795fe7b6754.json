{"ast":null,"code":"import { c as client, g as getClient } from './client-e01209d5.esm.js';\nexport { C as Client, I as InjectedConnector, a as createClient, b as createStorage, n as noopStorage } from './client-e01209d5.esm.js';\nimport { C as ConnectorAlreadyConnectedError, a as ConnectorNotFoundError, U as UserRejectedRequestError, S as SwitchChainNotSupportedError } from './base-4c248b82.esm.js';\nexport { A as AddChainError, c as ChainNotConfiguredError, b as Connector, C as ConnectorAlreadyConnectedError, a as ConnectorNotFoundError, P as ProviderRpcError, R as ResourceUnavailableError, d as RpcError, e as SwitchChainError, S as SwitchChainNotSupportedError, U as UserRejectedRequestError, n as normalizeChainId } from './base-4c248b82.esm.js';\nimport { Contract } from 'ethers/lib/ethers';\nimport { formatUnits, getAddress } from 'ethers/lib/utils';\nimport { a as allChains } from './chains-42648bc5.esm.js';\nexport { a as allChains, c as chain, b as chainId, d as defaultChains, e as defaultL2Chains, f as etherscanBlockExplorers } from './chains-42648bc5.esm.js';\nimport { providers, Contract as Contract$1 } from 'ethers';\nexport { a as alchemyRpcUrls, i as infuraRpcUrls } from './rpcs-7cfbd91c.esm.js';\nimport 'zustand/vanilla';\nimport 'zustand/middleware';\nimport 'eventemitter3'; // https://ethereum.org/en/developers/docs/standards/tokens/erc-20\n\nconst erc20ABI = ['event Approval(address indexed _owner, address indexed _spender, uint256 _value)', 'event Transfer(address indexed _from, address indexed _to, uint256 _value)', 'function allowance(address _owner, address _spender) public view returns (uint256 remaining)', 'function approve(address _spender, uint256 _value) public returns (bool success)', 'function balanceOf(address _owner) public view returns (uint256 balance)', 'function decimals() public view returns (uint8)', 'function name() public view returns (string)', 'function symbol() public view returns (string)', 'function totalSupply() public view returns (uint256)', 'function transfer(address _to, uint256 _value) public returns (bool success)', 'function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)']; // https://ethereum.org/en/developers/docs/standards/tokens/erc-721\n\nconst erc721ABI = ['event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId)', 'event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved)', 'event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId)', 'function approve(address _approved, uint256 _tokenId) external payable', 'function balanceOf(address _owner) external view returns (uint256)', 'function getApproved(uint256 _tokenId) external view returns (address)', 'function isApprovedForAll(address _owner, address _operator) external view returns (bool)', 'function name() view returns (string memory)', 'function ownerOf(uint256 _tokenId) external view returns (address)', 'function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable', 'function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) external payable', 'function setApprovalForAll(address _operator, bool _approved) external', 'function symbol() view returns (string memory)', 'function tokenByIndex(uint256 _index) view returns (uint256)', 'function tokenOfOwnerByIndex(address _owner, uint256 _index) view returns (uint256 tokenId)', 'function tokenURI(uint256 _tokenId) view returns (string memory)', 'function totalSupply() view returns (uint256)', 'function transferFrom(address _from, address _to, uint256 _tokenId) external payable']; // https://github.com/ethers-io/ethers.js/blob/master/packages/units/src.ts/index.ts#L10-L18\n\nconst units = ['wei', 'kwei', 'mwei', 'gwei', 'szabo', 'finney', 'ether'];\n\nfunction configureChains(defaultChains, providers) {\n  let {\n    minQuorum = 1,\n    targetQuorum = 1,\n    stallTimeout\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!defaultChains.length) throw new Error('must have at least one chain');\n  if (targetQuorum < minQuorum) throw new Error('quorum cannot be lower than minQuorum');\n  let chains = [];\n  const providers_ = {};\n  const webSocketProviders_ = {};\n\n  for (const chain of defaultChains) {\n    let configExists = false;\n\n    for (const provider of providers) {\n      const apiConfig = provider(chain); // If no API configuration was found (ie. no RPC URL) for\n      // this provider, then we skip and check the next one.\n\n      if (!apiConfig) continue;\n      configExists = true;\n\n      if (!chains.some(_ref => {\n        let {\n          id\n        } = _ref;\n        return id === chain.id;\n      })) {\n        chains = [...chains, apiConfig.chain];\n      }\n\n      providers_[chain.id] = [...(providers_[chain.id] || []), apiConfig.provider];\n\n      if (apiConfig.webSocketProvider) {\n        webSocketProviders_[chain.id] = [...(webSocketProviders_[chain.id] || []), apiConfig.webSocketProvider];\n      }\n    } // If no API configuration was found across the providers\n    // then we throw an error to the consumer.\n\n\n    if (!configExists) {\n      throw new Error([\"Could not find valid provider configuration for chain \\\"\".concat(chain.name, \"\\\".\\n\"), \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\", 'Read more: https://wagmi.sh/docs/providers/jsonRpc'].join('\\n'));\n    }\n  }\n\n  return {\n    chains,\n    provider: _ref2 => {\n      var _defaultChains$, _chainProviders$;\n\n      let {\n        chainId\n      } = _ref2;\n      const activeChainId = chainId && chains.some(x => x.id === chainId) ? chainId : (_defaultChains$ = defaultChains[0]) === null || _defaultChains$ === void 0 ? void 0 : _defaultChains$.id;\n      const chainProviders = providers_[activeChainId];\n      if (!chainProviders) throw new Error(\"No providers configured for chain \\\"\".concat(activeChainId, \"\\\"\"));\n      if (chainProviders.length === 1) return (_chainProviders$ = chainProviders[0]) === null || _chainProviders$ === void 0 ? void 0 : _chainProviders$.call(chainProviders);\n      return fallbackProvider(targetQuorum, minQuorum, chainProviders, {\n        stallTimeout\n      });\n    },\n    webSocketProvider: _ref3 => {\n      var _defaultChains$2, _chainWebSocketProvid, _chainWebSocketProvid2;\n\n      let {\n        chainId\n      } = _ref3;\n      const activeChainId = chainId && chains.some(x => x.id === chainId) ? chainId : (_defaultChains$2 = defaultChains[0]) === null || _defaultChains$2 === void 0 ? void 0 : _defaultChains$2.id;\n      const chainWebSocketProviders = webSocketProviders_[activeChainId];\n      if (!chainWebSocketProviders) return undefined;\n      if (chainWebSocketProviders.length === 1) return (_chainWebSocketProvid = chainWebSocketProviders[0]) === null || _chainWebSocketProvid === void 0 ? void 0 : _chainWebSocketProvid.call(chainWebSocketProviders); // WebSockets do not work with `fallbackProvider`\n      // Default to first available\n\n      return (_chainWebSocketProvid2 = chainWebSocketProviders[0]) === null || _chainWebSocketProvid2 === void 0 ? void 0 : _chainWebSocketProvid2.call(chainWebSocketProviders);\n    }\n  };\n}\n\nfunction fallbackProvider(targetQuorum, minQuorum, providers_, _ref4) {\n  let {\n    stallTimeout\n  } = _ref4;\n\n  try {\n    return new providers.FallbackProvider(providers_.map((chainProvider, index) => {\n      var _provider$priority, _provider$stallTimeou;\n\n      const provider = chainProvider();\n      return {\n        provider,\n        priority: (_provider$priority = provider.priority) !== null && _provider$priority !== void 0 ? _provider$priority : index,\n        stallTimeout: (_provider$stallTimeou = provider.stallTimeout) !== null && _provider$stallTimeou !== void 0 ? _provider$stallTimeou : stallTimeout,\n        weight: provider.weight\n      };\n    }), targetQuorum);\n  } catch (error) {\n    var _error$message;\n\n    if (error !== null && error !== void 0 && (_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes('quorum will always fail; larger than total weight')) {\n      if (targetQuorum === minQuorum) throw error;\n      return fallbackProvider(targetQuorum - 1, minQuorum, providers_, {\n        stallTimeout\n      });\n    }\n\n    throw error;\n  }\n}\n\nasync function connect(_ref) {\n  let {\n    chainId,\n    connector\n  } = _ref;\n  const activeConnector = client.connector;\n  if (connector.id === (activeConnector === null || activeConnector === void 0 ? void 0 : activeConnector.id)) throw new ConnectorAlreadyConnectedError();\n  const data = await connector.connect({\n    chainId\n  });\n  client.setLastUsedConnector(connector.id);\n  client.setState(x => ({ ...x,\n    connector,\n    chains: connector === null || connector === void 0 ? void 0 : connector.chains,\n    data\n  }));\n  client.storage.setItem('connected', true);\n  return { ...data,\n    connector\n  };\n}\n\nasync function disconnect() {\n  const client = getClient();\n  if (client.connector) await client.connector.disconnect();\n  client.clearState();\n  client.storage.removeItem('connected');\n}\n\nfunction getProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = getClient();\n  if (chainId && typeof client.config.provider === 'function') return client.config.provider({\n    chainId\n  });\n  return client.provider;\n}\n\nfunction getWebSocketProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = getClient();\n  if (chainId && typeof client.config.webSocketProvider === 'function') return client.config.webSocketProvider({\n    chainId\n  });\n  return client.webSocketProvider;\n}\n\nfunction watchProvider(args, callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(getProvider(args));\n\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider\n    } = _ref;\n    return provider;\n  }, handleChange);\n  return unsubscribe;\n}\n\nfunction watchWebSocketProvider(args, callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(getWebSocketProvider(args));\n\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      webSocketProvider\n    } = _ref;\n    return webSocketProvider;\n  }, handleChange);\n  return unsubscribe;\n}\n\nasync function fetchBalance(_ref) {\n  var _client$connector$cha, _client$connector, _chain$nativeCurrency, _chain$nativeCurrency2, _chain$nativeCurrency3, _chain$nativeCurrency4;\n\n  let {\n    addressOrName,\n    chainId,\n    formatUnits: unit = 'ether',\n    token\n  } = _ref;\n  const client = getClient();\n  const provider = getProvider({\n    chainId\n  });\n\n  if (token) {\n    const contract = new Contract(token, erc20ABI, provider);\n    const [value, decimals, symbol] = await Promise.all([contract.balanceOf(addressOrName), contract.decimals(), contract.symbol()]);\n    return {\n      decimals,\n      formatted: formatUnits(value, unit),\n      symbol,\n      unit,\n      value\n    };\n  }\n\n  const chains = [...((_client$connector$cha = (_client$connector = client.connector) === null || _client$connector === void 0 ? void 0 : _client$connector.chains) !== null && _client$connector$cha !== void 0 ? _client$connector$cha : []), ...allChains];\n  const value = await provider.getBalance(addressOrName);\n  const chain = chains.find(x => x.id === provider.network.chainId);\n  return {\n    decimals: (_chain$nativeCurrency = chain === null || chain === void 0 ? void 0 : (_chain$nativeCurrency2 = chain.nativeCurrency) === null || _chain$nativeCurrency2 === void 0 ? void 0 : _chain$nativeCurrency2.decimals) !== null && _chain$nativeCurrency !== void 0 ? _chain$nativeCurrency : 18,\n    formatted: formatUnits(value, unit),\n    symbol: (_chain$nativeCurrency3 = chain === null || chain === void 0 ? void 0 : (_chain$nativeCurrency4 = chain.nativeCurrency) === null || _chain$nativeCurrency4 === void 0 ? void 0 : _chain$nativeCurrency4.symbol) !== null && _chain$nativeCurrency3 !== void 0 ? _chain$nativeCurrency3 : 'ETH',\n    unit,\n    value\n  };\n}\n\nasync function fetchSigner() {\n  var _client$connector, _client$connector$get;\n\n  const client = getClient();\n  const signer = (await ((_client$connector = client.connector) === null || _client$connector === void 0 ? void 0 : (_client$connector$get = _client$connector.getSigner) === null || _client$connector$get === void 0 ? void 0 : _client$connector$get.call(_client$connector))) || null;\n  return signer;\n}\n\nfunction getAccount() {\n  const {\n    data,\n    connector\n  } = getClient();\n  return {\n    address: data === null || data === void 0 ? void 0 : data.account,\n    connector\n  };\n}\n\nfunction getNetwork() {\n  var _client$data, _client$data$chain, _client$chains, _find, _client$data2;\n\n  const client = getClient();\n  const chainId = (_client$data = client.data) === null || _client$data === void 0 ? void 0 : (_client$data$chain = _client$data.chain) === null || _client$data$chain === void 0 ? void 0 : _client$data$chain.id;\n  const activeChains = (_client$chains = client.chains) !== null && _client$chains !== void 0 ? _client$chains : [];\n  const activeChain = (_find = [...activeChains, ...allChains].find(x => x.id === chainId)) !== null && _find !== void 0 ? _find : {\n    id: chainId,\n    name: \"Chain \".concat(chainId),\n    network: \"\".concat(chainId),\n    rpcUrls: {\n      default: ''\n    }\n  };\n  return {\n    chain: chainId ? { ...activeChain,\n      ...((_client$data2 = client.data) === null || _client$data2 === void 0 ? void 0 : _client$data2.chain),\n      id: chainId\n    } : undefined,\n    chains: activeChains\n  };\n}\n\nasync function signMessage(args) {\n  try {\n    const signer = await fetchSigner();\n    if (!signer) throw new ConnectorNotFoundError();\n    return await signer.signMessage(args.message);\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function signTypedData(args) {\n  try {\n    const signer = await fetchSigner();\n    if (!signer) throw new ConnectorNotFoundError(); // Method name may be changed in the future, see https://docs.ethers.io/v5/api/signer/#Signer-signTypedData\n\n    return await signer._signTypedData(args.domain, args.types, args.value);\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function switchNetwork(_ref) {\n  var _client$connector;\n\n  let {\n    chainId\n  } = _ref;\n  const client = getClient();\n  if (!((_client$connector = client.connector) !== null && _client$connector !== void 0 && _client$connector.switchChain)) throw new SwitchChainNotSupportedError();\n  const chain = await client.connector.switchChain(chainId);\n  return chain;\n}\n\nfunction watchAccount(callback) {\n  const client = getClient();\n\n  const handleChange = () => callback(getAccount());\n\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      data,\n      connector\n    } = _ref;\n    return {\n      account: data === null || data === void 0 ? void 0 : data.account,\n      connector\n    };\n  }, handleChange, {\n    equalityFn: (selected, previous) => selected.account === previous.account && selected.connector === previous.connector\n  });\n  return unsubscribe;\n}\n\nfunction watchNetwork(callback) {\n  const client = getClient();\n\n  const handleChange = () => callback(getNetwork());\n\n  const unsubscribe = client.subscribe(_ref => {\n    var _data$chain;\n\n    let {\n      data,\n      chains\n    } = _ref;\n    return {\n      chainId: data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id,\n      chains\n    };\n  }, handleChange, {\n    equalityFn: (selected, previous) => selected.chainId === previous.chainId && selected.chains === previous.chains\n  });\n  return unsubscribe;\n}\n\nfunction watchSigner(callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(await fetchSigner());\n\n  const unsubscribe = client.subscribe(_ref => {\n    var _data$chain;\n\n    let {\n      data,\n      connector\n    } = _ref;\n    return {\n      account: data === null || data === void 0 ? void 0 : data.account,\n      chainId: data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id,\n      connector\n    };\n  }, handleChange, {\n    equalityFn: (selected, previous) => selected.account === previous.account && selected.chainId === previous.chainId && selected.connector === previous.connector\n  });\n  return unsubscribe;\n}\n\nfunction getContract(_ref) {\n  let {\n    addressOrName,\n    contractInterface,\n    signerOrProvider\n  } = _ref;\n  return new Contract$1(addressOrName, contractInterface, signerOrProvider);\n}\n\nasync function readContract(contractConfig, functionName) {\n  let {\n    args,\n    chainId,\n    overrides\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const contract = getContract({\n    signerOrProvider: provider,\n    ...contractConfig\n  });\n  const params = [...(Array.isArray(args) ? args : args ? [args] : []), ...(overrides ? [overrides] : [])];\n  const contractFunction = contract[functionName];\n  if (!contractFunction) console.warn(\"\\\"\".concat(functionName, \"\\\" does not in interface for contract \\\"\").concat(contractConfig.addressOrName, \"\\\"\"));\n  const response = await (contractFunction === null || contractFunction === void 0 ? void 0 : contractFunction(...params));\n  return response;\n}\n\nfunction watchContractEvent(\n/** Contract configuration */\ncontractArgs,\n/** Event name to listen to */\neventName, callback) {\n  let {\n    chainId,\n    once\n  } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let contract;\n\n  const watchEvent = async () => {\n    if (contract) {\n      var _contract;\n\n      (_contract = contract) === null || _contract === void 0 ? void 0 : _contract.off(eventName, callback);\n    }\n\n    contract = getContract({\n      signerOrProvider: getWebSocketProvider({\n        chainId\n      }) || getProvider({\n        chainId\n      }),\n      ...contractArgs\n    });\n    if (once) contract.once(eventName, callback);else contract.on(eventName, callback);\n  };\n\n  watchEvent();\n  const client = getClient();\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, watchEvent, {\n    equalityFn: (selected, previous) => selected.provider === previous.provider && selected.webSocketProvider === previous.webSocketProvider\n  });\n  return () => {\n    var _contract2;\n\n    (_contract2 = contract) === null || _contract2 === void 0 ? void 0 : _contract2.off(eventName, callback);\n    unsubscribe();\n  };\n}\n\nasync function fetchBlockNumber() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const blockNumber = await provider.getBlockNumber();\n  return blockNumber;\n}\n\nfunction watchBlockNumber(args, callback) {\n  var _client$webSocketProv;\n\n  let previousProvider;\n\n  const createListener = provider => {\n    if (previousProvider) {\n      var _previousProvider;\n\n      (_previousProvider = previousProvider) === null || _previousProvider === void 0 ? void 0 : _previousProvider.off('block', callback);\n    }\n\n    provider.on('block', callback);\n    previousProvider = provider;\n  };\n\n  const client = getClient();\n  const provider_ = (_client$webSocketProv = client.webSocketProvider) !== null && _client$webSocketProv !== void 0 ? _client$webSocketProv : client.provider;\n  if (args.listen) createListener(provider_);\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, async _ref2 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref2;\n    const provider_ = webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider;\n\n    if (args.listen && provider_) {\n      createListener(provider_);\n    }\n\n    callback(await fetchBlockNumber());\n  }, {\n    equalityFn: (selected, previous) => selected.provider === previous.provider && selected.webSocketProvider === previous.webSocketProvider\n  });\n  return () => {\n    unsubscribe();\n    provider_ === null || provider_ === void 0 ? void 0 : provider_.off('block', callback);\n  };\n}\n\nfunction watchReadContract(contractConfig, functionName) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let callback = arguments.length > 3 ? arguments[3] : undefined;\n  const client = getClient();\n\n  const handleChange = async () => callback(await readContract(contractConfig, functionName, config));\n\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : undefined;\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider\n    } = _ref;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch === null || unwatch === void 0 ? void 0 : unwatch();\n  };\n}\n\nasync function writeContract(contractConfig, functionName) {\n  let {\n    args,\n    overrides\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const client = getClient();\n  if (!client.connector) throw new ConnectorNotFoundError();\n  const params = [...(Array.isArray(args) ? args : args ? [args] : []), ...(overrides ? [overrides] : [])];\n\n  try {\n    const signer = await client.connector.getSigner();\n    const contract = getContract(contractConfig);\n    const contractWithSigner = contract.connect(signer);\n    const contractFunction = contractWithSigner[functionName];\n    if (!contractFunction) console.warn(\"\\\"\".concat(functionName, \"\\\" does not exist in interface for contract \\\"\").concat(contractConfig.addressOrName, \"\\\"\"));\n    const response = await contractFunction(...params);\n    return response;\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function fetchEnsAddress(_ref) {\n  let {\n    chainId,\n    name\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  const address = await provider.resolveName(name);\n\n  try {\n    return address ? getAddress(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\nasync function fetchEnsAvatar(_ref) {\n  let {\n    addressOrName,\n    chainId\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  }); // TODO: Update with more advanced logic\n  // https://github.com/ensdomains/ens-avatar\n\n  const avatar = await provider.getAvatar(addressOrName);\n  return avatar;\n}\n\nasync function fetchEnsName(_ref) {\n  let {\n    address,\n    chainId\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  return await provider.lookupAddress(address);\n}\n\nasync function fetchEnsResolver(_ref) {\n  let {\n    chainId,\n    name\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  const resolver = await provider.getResolver(name);\n  return resolver;\n}\n\nasync function fetchFeeData() {\n  let {\n    chainId,\n    formatUnits: units = 'wei'\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const feeData = await provider.getFeeData();\n  const formatted = {\n    gasPrice: feeData.gasPrice ? formatUnits(feeData.gasPrice, units) : null,\n    maxFeePerGas: feeData.maxFeePerGas ? formatUnits(feeData.maxFeePerGas, units) : null,\n    maxPriorityFeePerGas: feeData.maxPriorityFeePerGas ? formatUnits(feeData.maxPriorityFeePerGas, units) : null\n  };\n  return { ...feeData,\n    formatted\n  };\n}\n\nasync function fetchToken(_ref) {\n  let {\n    address,\n    chainId,\n    formatUnits: units = 'ether'\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  const contract = new Contract(address, erc20ABI, provider);\n  const [symbol, decimals, totalSupply] = await Promise.all([contract.symbol(), contract.decimals(), contract.totalSupply()]);\n  const token = {\n    address,\n    decimals,\n    symbol,\n    totalSupply: {\n      formatted: formatUnits(totalSupply, units),\n      value: totalSupply\n    }\n  };\n  return token;\n}\n\nasync function sendTransaction(args) {\n  try {\n    const signer = await fetchSigner();\n    if (!signer) throw new ConnectorNotFoundError();\n    const transaction = await signer.sendTransaction(args.request);\n    return transaction;\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function waitForTransaction(_ref) {\n  let {\n    chainId,\n    confirmations,\n    hash,\n    timeout,\n    wait: wait_\n  } = _ref;\n  let promise;\n\n  if (hash) {\n    const provider = getProvider({\n      chainId\n    });\n    promise = provider.waitForTransaction(hash, confirmations, timeout);\n  } else if (wait_) promise = wait_(confirmations);else throw new Error('hash or wait is required');\n\n  return await promise;\n}\n\nexport { configureChains, connect, disconnect, erc20ABI, erc721ABI, fetchBalance, fetchBlockNumber, fetchEnsAddress, fetchEnsAvatar, fetchEnsName, fetchEnsResolver, fetchFeeData, fetchSigner, fetchToken, getAccount, getContract, getNetwork, getProvider, getWebSocketProvider, readContract, sendTransaction, signMessage, signTypedData, switchNetwork, units, waitForTransaction, watchAccount, watchBlockNumber, watchContractEvent, watchNetwork, watchProvider, watchReadContract, watchSigner, watchWebSocketProvider, writeContract };","map":{"version":3,"names":["c","client","g","getClient","C","Client","I","InjectedConnector","a","createClient","b","createStorage","n","noopStorage","ConnectorAlreadyConnectedError","ConnectorNotFoundError","U","UserRejectedRequestError","S","SwitchChainNotSupportedError","A","AddChainError","ChainNotConfiguredError","Connector","P","ProviderRpcError","R","ResourceUnavailableError","d","RpcError","e","SwitchChainError","normalizeChainId","Contract","formatUnits","getAddress","allChains","chain","chainId","defaultChains","defaultL2Chains","f","etherscanBlockExplorers","providers","Contract$1","alchemyRpcUrls","i","infuraRpcUrls","erc20ABI","erc721ABI","units","configureChains","minQuorum","targetQuorum","stallTimeout","arguments","length","undefined","Error","chains","providers_","webSocketProviders_","configExists","provider","apiConfig","some","_ref","id","webSocketProvider","concat","name","join","_ref2","_defaultChains$","_chainProviders$","activeChainId","x","chainProviders","call","fallbackProvider","_ref3","_defaultChains$2","_chainWebSocketProvid","_chainWebSocketProvid2","chainWebSocketProviders","_ref4","FallbackProvider","map","chainProvider","index","_provider$priority","_provider$stallTimeou","priority","weight","error","_error$message","message","includes","connect","connector","activeConnector","data","setLastUsedConnector","setState","storage","setItem","disconnect","clearState","removeItem","getProvider","config","getWebSocketProvider","watchProvider","args","callback","handleChange","unsubscribe","subscribe","watchWebSocketProvider","fetchBalance","_client$connector$cha","_client$connector","_chain$nativeCurrency","_chain$nativeCurrency2","_chain$nativeCurrency3","_chain$nativeCurrency4","addressOrName","unit","token","contract","value","decimals","symbol","Promise","all","balanceOf","formatted","getBalance","find","network","nativeCurrency","fetchSigner","_client$connector$get","signer","getSigner","getAccount","address","account","getNetwork","_client$data","_client$data$chain","_client$chains","_find","_client$data2","activeChains","activeChain","rpcUrls","default","signMessage","code","signTypedData","_signTypedData","domain","types","switchNetwork","switchChain","watchAccount","equalityFn","selected","previous","watchNetwork","_data$chain","watchSigner","getContract","contractInterface","signerOrProvider","readContract","contractConfig","functionName","overrides","params","Array","isArray","contractFunction","console","warn","response","watchContractEvent","contractArgs","eventName","once","watchEvent","_contract","off","on","_contract2","fetchBlockNumber","blockNumber","getBlockNumber","watchBlockNumber","_client$webSocketProv","previousProvider","createListener","_previousProvider","provider_","listen","watchReadContract","unwatch","listenToBlock","writeContract","contractWithSigner","fetchEnsAddress","resolveName","_error","fetchEnsAvatar","avatar","getAvatar","fetchEnsName","lookupAddress","fetchEnsResolver","resolver","getResolver","fetchFeeData","feeData","getFeeData","gasPrice","maxFeePerGas","maxPriorityFeePerGas","fetchToken","totalSupply","sendTransaction","transaction","request","waitForTransaction","confirmations","hash","timeout","wait","wait_","promise"],"sources":["/home/king-longs/Desktop/final/node_modules/@wagmi/core/dist/wagmi-core.esm.js"],"sourcesContent":["import { c as client, g as getClient } from './client-e01209d5.esm.js';\nexport { C as Client, I as InjectedConnector, a as createClient, b as createStorage, n as noopStorage } from './client-e01209d5.esm.js';\nimport { C as ConnectorAlreadyConnectedError, a as ConnectorNotFoundError, U as UserRejectedRequestError, S as SwitchChainNotSupportedError } from './base-4c248b82.esm.js';\nexport { A as AddChainError, c as ChainNotConfiguredError, b as Connector, C as ConnectorAlreadyConnectedError, a as ConnectorNotFoundError, P as ProviderRpcError, R as ResourceUnavailableError, d as RpcError, e as SwitchChainError, S as SwitchChainNotSupportedError, U as UserRejectedRequestError, n as normalizeChainId } from './base-4c248b82.esm.js';\nimport { Contract } from 'ethers/lib/ethers';\nimport { formatUnits, getAddress } from 'ethers/lib/utils';\nimport { a as allChains } from './chains-42648bc5.esm.js';\nexport { a as allChains, c as chain, b as chainId, d as defaultChains, e as defaultL2Chains, f as etherscanBlockExplorers } from './chains-42648bc5.esm.js';\nimport { providers, Contract as Contract$1 } from 'ethers';\nexport { a as alchemyRpcUrls, i as infuraRpcUrls } from './rpcs-7cfbd91c.esm.js';\nimport 'zustand/vanilla';\nimport 'zustand/middleware';\nimport 'eventemitter3';\n\n// https://ethereum.org/en/developers/docs/standards/tokens/erc-20\nconst erc20ABI = ['event Approval(address indexed _owner, address indexed _spender, uint256 _value)', 'event Transfer(address indexed _from, address indexed _to, uint256 _value)', 'function allowance(address _owner, address _spender) public view returns (uint256 remaining)', 'function approve(address _spender, uint256 _value) public returns (bool success)', 'function balanceOf(address _owner) public view returns (uint256 balance)', 'function decimals() public view returns (uint8)', 'function name() public view returns (string)', 'function symbol() public view returns (string)', 'function totalSupply() public view returns (uint256)', 'function transfer(address _to, uint256 _value) public returns (bool success)', 'function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)']; // https://ethereum.org/en/developers/docs/standards/tokens/erc-721\n\nconst erc721ABI = ['event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId)', 'event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved)', 'event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId)', 'function approve(address _approved, uint256 _tokenId) external payable', 'function balanceOf(address _owner) external view returns (uint256)', 'function getApproved(uint256 _tokenId) external view returns (address)', 'function isApprovedForAll(address _owner, address _operator) external view returns (bool)', 'function name() view returns (string memory)', 'function ownerOf(uint256 _tokenId) external view returns (address)', 'function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable', 'function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) external payable', 'function setApprovalForAll(address _operator, bool _approved) external', 'function symbol() view returns (string memory)', 'function tokenByIndex(uint256 _index) view returns (uint256)', 'function tokenOfOwnerByIndex(address _owner, uint256 _index) view returns (uint256 tokenId)', 'function tokenURI(uint256 _tokenId) view returns (string memory)', 'function totalSupply() view returns (uint256)', 'function transferFrom(address _from, address _to, uint256 _tokenId) external payable'];\n\n// https://github.com/ethers-io/ethers.js/blob/master/packages/units/src.ts/index.ts#L10-L18\nconst units = ['wei', 'kwei', 'mwei', 'gwei', 'szabo', 'finney', 'ether'];\n\nfunction configureChains(defaultChains, providers) {\n  let {\n    minQuorum = 1,\n    targetQuorum = 1,\n    stallTimeout\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!defaultChains.length) throw new Error('must have at least one chain');\n  if (targetQuorum < minQuorum) throw new Error('quorum cannot be lower than minQuorum');\n  let chains = [];\n  const providers_ = {};\n  const webSocketProviders_ = {};\n\n  for (const chain of defaultChains) {\n    let configExists = false;\n\n    for (const provider of providers) {\n      const apiConfig = provider(chain); // If no API configuration was found (ie. no RPC URL) for\n      // this provider, then we skip and check the next one.\n\n      if (!apiConfig) continue;\n      configExists = true;\n\n      if (!chains.some(_ref => {\n        let {\n          id\n        } = _ref;\n        return id === chain.id;\n      })) {\n        chains = [...chains, apiConfig.chain];\n      }\n\n      providers_[chain.id] = [...(providers_[chain.id] || []), apiConfig.provider];\n\n      if (apiConfig.webSocketProvider) {\n        webSocketProviders_[chain.id] = [...(webSocketProviders_[chain.id] || []), apiConfig.webSocketProvider];\n      }\n    } // If no API configuration was found across the providers\n    // then we throw an error to the consumer.\n\n\n    if (!configExists) {\n      throw new Error([\"Could not find valid provider configuration for chain \\\"\".concat(chain.name, \"\\\".\\n\"), \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\", 'Read more: https://wagmi.sh/docs/providers/jsonRpc'].join('\\n'));\n    }\n  }\n\n  return {\n    chains,\n    provider: _ref2 => {\n      var _defaultChains$, _chainProviders$;\n\n      let {\n        chainId\n      } = _ref2;\n      const activeChainId = chainId && chains.some(x => x.id === chainId) ? chainId : (_defaultChains$ = defaultChains[0]) === null || _defaultChains$ === void 0 ? void 0 : _defaultChains$.id;\n      const chainProviders = providers_[activeChainId];\n      if (!chainProviders) throw new Error(\"No providers configured for chain \\\"\".concat(activeChainId, \"\\\"\"));\n      if (chainProviders.length === 1) return (_chainProviders$ = chainProviders[0]) === null || _chainProviders$ === void 0 ? void 0 : _chainProviders$.call(chainProviders);\n      return fallbackProvider(targetQuorum, minQuorum, chainProviders, {\n        stallTimeout\n      });\n    },\n    webSocketProvider: _ref3 => {\n      var _defaultChains$2, _chainWebSocketProvid, _chainWebSocketProvid2;\n\n      let {\n        chainId\n      } = _ref3;\n      const activeChainId = chainId && chains.some(x => x.id === chainId) ? chainId : (_defaultChains$2 = defaultChains[0]) === null || _defaultChains$2 === void 0 ? void 0 : _defaultChains$2.id;\n      const chainWebSocketProviders = webSocketProviders_[activeChainId];\n      if (!chainWebSocketProviders) return undefined;\n      if (chainWebSocketProviders.length === 1) return (_chainWebSocketProvid = chainWebSocketProviders[0]) === null || _chainWebSocketProvid === void 0 ? void 0 : _chainWebSocketProvid.call(chainWebSocketProviders); // WebSockets do not work with `fallbackProvider`\n      // Default to first available\n\n      return (_chainWebSocketProvid2 = chainWebSocketProviders[0]) === null || _chainWebSocketProvid2 === void 0 ? void 0 : _chainWebSocketProvid2.call(chainWebSocketProviders);\n    }\n  };\n}\n\nfunction fallbackProvider(targetQuorum, minQuorum, providers_, _ref4) {\n  let {\n    stallTimeout\n  } = _ref4;\n\n  try {\n    return new providers.FallbackProvider(providers_.map((chainProvider, index) => {\n      var _provider$priority, _provider$stallTimeou;\n\n      const provider = chainProvider();\n      return {\n        provider,\n        priority: (_provider$priority = provider.priority) !== null && _provider$priority !== void 0 ? _provider$priority : index,\n        stallTimeout: (_provider$stallTimeou = provider.stallTimeout) !== null && _provider$stallTimeou !== void 0 ? _provider$stallTimeou : stallTimeout,\n        weight: provider.weight\n      };\n    }), targetQuorum);\n  } catch (error) {\n    var _error$message;\n\n    if (error !== null && error !== void 0 && (_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes('quorum will always fail; larger than total weight')) {\n      if (targetQuorum === minQuorum) throw error;\n      return fallbackProvider(targetQuorum - 1, minQuorum, providers_, {\n        stallTimeout\n      });\n    }\n\n    throw error;\n  }\n}\n\nasync function connect(_ref) {\n  let {\n    chainId,\n    connector\n  } = _ref;\n  const activeConnector = client.connector;\n  if (connector.id === (activeConnector === null || activeConnector === void 0 ? void 0 : activeConnector.id)) throw new ConnectorAlreadyConnectedError();\n  const data = await connector.connect({\n    chainId\n  });\n  client.setLastUsedConnector(connector.id);\n  client.setState(x => ({ ...x,\n    connector,\n    chains: connector === null || connector === void 0 ? void 0 : connector.chains,\n    data\n  }));\n  client.storage.setItem('connected', true);\n  return { ...data,\n    connector\n  };\n}\n\nasync function disconnect() {\n  const client = getClient();\n  if (client.connector) await client.connector.disconnect();\n  client.clearState();\n  client.storage.removeItem('connected');\n}\n\nfunction getProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = getClient();\n  if (chainId && typeof client.config.provider === 'function') return client.config.provider({\n    chainId\n  });\n  return client.provider;\n}\n\nfunction getWebSocketProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = getClient();\n  if (chainId && typeof client.config.webSocketProvider === 'function') return client.config.webSocketProvider({\n    chainId\n  });\n  return client.webSocketProvider;\n}\n\nfunction watchProvider(args, callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(getProvider(args));\n\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider\n    } = _ref;\n    return provider;\n  }, handleChange);\n  return unsubscribe;\n}\n\nfunction watchWebSocketProvider(args, callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(getWebSocketProvider(args));\n\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      webSocketProvider\n    } = _ref;\n    return webSocketProvider;\n  }, handleChange);\n  return unsubscribe;\n}\n\nasync function fetchBalance(_ref) {\n  var _client$connector$cha, _client$connector, _chain$nativeCurrency, _chain$nativeCurrency2, _chain$nativeCurrency3, _chain$nativeCurrency4;\n\n  let {\n    addressOrName,\n    chainId,\n    formatUnits: unit = 'ether',\n    token\n  } = _ref;\n  const client = getClient();\n  const provider = getProvider({\n    chainId\n  });\n\n  if (token) {\n    const contract = new Contract(token, erc20ABI, provider);\n    const [value, decimals, symbol] = await Promise.all([contract.balanceOf(addressOrName), contract.decimals(), contract.symbol()]);\n    return {\n      decimals,\n      formatted: formatUnits(value, unit),\n      symbol,\n      unit,\n      value\n    };\n  }\n\n  const chains = [...((_client$connector$cha = (_client$connector = client.connector) === null || _client$connector === void 0 ? void 0 : _client$connector.chains) !== null && _client$connector$cha !== void 0 ? _client$connector$cha : []), ...allChains];\n  const value = await provider.getBalance(addressOrName);\n  const chain = chains.find(x => x.id === provider.network.chainId);\n  return {\n    decimals: (_chain$nativeCurrency = chain === null || chain === void 0 ? void 0 : (_chain$nativeCurrency2 = chain.nativeCurrency) === null || _chain$nativeCurrency2 === void 0 ? void 0 : _chain$nativeCurrency2.decimals) !== null && _chain$nativeCurrency !== void 0 ? _chain$nativeCurrency : 18,\n    formatted: formatUnits(value, unit),\n    symbol: (_chain$nativeCurrency3 = chain === null || chain === void 0 ? void 0 : (_chain$nativeCurrency4 = chain.nativeCurrency) === null || _chain$nativeCurrency4 === void 0 ? void 0 : _chain$nativeCurrency4.symbol) !== null && _chain$nativeCurrency3 !== void 0 ? _chain$nativeCurrency3 : 'ETH',\n    unit,\n    value\n  };\n}\n\nasync function fetchSigner() {\n  var _client$connector, _client$connector$get;\n\n  const client = getClient();\n  const signer = (await ((_client$connector = client.connector) === null || _client$connector === void 0 ? void 0 : (_client$connector$get = _client$connector.getSigner) === null || _client$connector$get === void 0 ? void 0 : _client$connector$get.call(_client$connector))) || null;\n  return signer;\n}\n\nfunction getAccount() {\n  const {\n    data,\n    connector\n  } = getClient();\n  return {\n    address: data === null || data === void 0 ? void 0 : data.account,\n    connector\n  };\n}\n\nfunction getNetwork() {\n  var _client$data, _client$data$chain, _client$chains, _find, _client$data2;\n\n  const client = getClient();\n  const chainId = (_client$data = client.data) === null || _client$data === void 0 ? void 0 : (_client$data$chain = _client$data.chain) === null || _client$data$chain === void 0 ? void 0 : _client$data$chain.id;\n  const activeChains = (_client$chains = client.chains) !== null && _client$chains !== void 0 ? _client$chains : [];\n  const activeChain = (_find = [...activeChains, ...allChains].find(x => x.id === chainId)) !== null && _find !== void 0 ? _find : {\n    id: chainId,\n    name: \"Chain \".concat(chainId),\n    network: \"\".concat(chainId),\n    rpcUrls: {\n      default: ''\n    }\n  };\n  return {\n    chain: chainId ? { ...activeChain,\n      ...((_client$data2 = client.data) === null || _client$data2 === void 0 ? void 0 : _client$data2.chain),\n      id: chainId\n    } : undefined,\n    chains: activeChains\n  };\n}\n\nasync function signMessage(args) {\n  try {\n    const signer = await fetchSigner();\n    if (!signer) throw new ConnectorNotFoundError();\n    return await signer.signMessage(args.message);\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function signTypedData(args) {\n  try {\n    const signer = await fetchSigner();\n    if (!signer) throw new ConnectorNotFoundError(); // Method name may be changed in the future, see https://docs.ethers.io/v5/api/signer/#Signer-signTypedData\n\n    return await signer._signTypedData(args.domain, args.types, args.value);\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function switchNetwork(_ref) {\n  var _client$connector;\n\n  let {\n    chainId\n  } = _ref;\n  const client = getClient();\n  if (!((_client$connector = client.connector) !== null && _client$connector !== void 0 && _client$connector.switchChain)) throw new SwitchChainNotSupportedError();\n  const chain = await client.connector.switchChain(chainId);\n  return chain;\n}\n\nfunction watchAccount(callback) {\n  const client = getClient();\n\n  const handleChange = () => callback(getAccount());\n\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      data,\n      connector\n    } = _ref;\n    return {\n      account: data === null || data === void 0 ? void 0 : data.account,\n      connector\n    };\n  }, handleChange, {\n    equalityFn: (selected, previous) => selected.account === previous.account && selected.connector === previous.connector\n  });\n  return unsubscribe;\n}\n\nfunction watchNetwork(callback) {\n  const client = getClient();\n\n  const handleChange = () => callback(getNetwork());\n\n  const unsubscribe = client.subscribe(_ref => {\n    var _data$chain;\n\n    let {\n      data,\n      chains\n    } = _ref;\n    return {\n      chainId: data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id,\n      chains\n    };\n  }, handleChange, {\n    equalityFn: (selected, previous) => selected.chainId === previous.chainId && selected.chains === previous.chains\n  });\n  return unsubscribe;\n}\n\nfunction watchSigner(callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(await fetchSigner());\n\n  const unsubscribe = client.subscribe(_ref => {\n    var _data$chain;\n\n    let {\n      data,\n      connector\n    } = _ref;\n    return {\n      account: data === null || data === void 0 ? void 0 : data.account,\n      chainId: data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id,\n      connector\n    };\n  }, handleChange, {\n    equalityFn: (selected, previous) => selected.account === previous.account && selected.chainId === previous.chainId && selected.connector === previous.connector\n  });\n  return unsubscribe;\n}\n\nfunction getContract(_ref) {\n  let {\n    addressOrName,\n    contractInterface,\n    signerOrProvider\n  } = _ref;\n  return new Contract$1(addressOrName, contractInterface, signerOrProvider);\n}\n\nasync function readContract(contractConfig, functionName) {\n  let {\n    args,\n    chainId,\n    overrides\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const contract = getContract({\n    signerOrProvider: provider,\n    ...contractConfig\n  });\n  const params = [...(Array.isArray(args) ? args : args ? [args] : []), ...(overrides ? [overrides] : [])];\n  const contractFunction = contract[functionName];\n  if (!contractFunction) console.warn(\"\\\"\".concat(functionName, \"\\\" does not in interface for contract \\\"\").concat(contractConfig.addressOrName, \"\\\"\"));\n  const response = await (contractFunction === null || contractFunction === void 0 ? void 0 : contractFunction(...params));\n  return response;\n}\n\nfunction watchContractEvent(\n/** Contract configuration */\ncontractArgs,\n/** Event name to listen to */\neventName, callback) {\n  let {\n    chainId,\n    once\n  } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let contract;\n\n  const watchEvent = async () => {\n    if (contract) {\n      var _contract;\n\n      (_contract = contract) === null || _contract === void 0 ? void 0 : _contract.off(eventName, callback);\n    }\n\n    contract = getContract({\n      signerOrProvider: getWebSocketProvider({\n        chainId\n      }) || getProvider({\n        chainId\n      }),\n      ...contractArgs\n    });\n    if (once) contract.once(eventName, callback);else contract.on(eventName, callback);\n  };\n\n  watchEvent();\n  const client = getClient();\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, watchEvent, {\n    equalityFn: (selected, previous) => selected.provider === previous.provider && selected.webSocketProvider === previous.webSocketProvider\n  });\n  return () => {\n    var _contract2;\n\n    (_contract2 = contract) === null || _contract2 === void 0 ? void 0 : _contract2.off(eventName, callback);\n    unsubscribe();\n  };\n}\n\nasync function fetchBlockNumber() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const blockNumber = await provider.getBlockNumber();\n  return blockNumber;\n}\n\nfunction watchBlockNumber(args, callback) {\n  var _client$webSocketProv;\n\n  let previousProvider;\n\n  const createListener = provider => {\n    if (previousProvider) {\n      var _previousProvider;\n\n      (_previousProvider = previousProvider) === null || _previousProvider === void 0 ? void 0 : _previousProvider.off('block', callback);\n    }\n\n    provider.on('block', callback);\n    previousProvider = provider;\n  };\n\n  const client = getClient();\n  const provider_ = (_client$webSocketProv = client.webSocketProvider) !== null && _client$webSocketProv !== void 0 ? _client$webSocketProv : client.provider;\n  if (args.listen) createListener(provider_);\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, async _ref2 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref2;\n    const provider_ = webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider;\n\n    if (args.listen && provider_) {\n      createListener(provider_);\n    }\n\n    callback(await fetchBlockNumber());\n  }, {\n    equalityFn: (selected, previous) => selected.provider === previous.provider && selected.webSocketProvider === previous.webSocketProvider\n  });\n  return () => {\n    unsubscribe();\n    provider_ === null || provider_ === void 0 ? void 0 : provider_.off('block', callback);\n  };\n}\n\nfunction watchReadContract(contractConfig, functionName) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let callback = arguments.length > 3 ? arguments[3] : undefined;\n  const client = getClient();\n\n  const handleChange = async () => callback(await readContract(contractConfig, functionName, config));\n\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : undefined;\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider\n    } = _ref;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch === null || unwatch === void 0 ? void 0 : unwatch();\n  };\n}\n\nasync function writeContract(contractConfig, functionName) {\n  let {\n    args,\n    overrides\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const client = getClient();\n  if (!client.connector) throw new ConnectorNotFoundError();\n  const params = [...(Array.isArray(args) ? args : args ? [args] : []), ...(overrides ? [overrides] : [])];\n\n  try {\n    const signer = await client.connector.getSigner();\n    const contract = getContract(contractConfig);\n    const contractWithSigner = contract.connect(signer);\n    const contractFunction = contractWithSigner[functionName];\n    if (!contractFunction) console.warn(\"\\\"\".concat(functionName, \"\\\" does not exist in interface for contract \\\"\").concat(contractConfig.addressOrName, \"\\\"\"));\n    const response = await contractFunction(...params);\n    return response;\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function fetchEnsAddress(_ref) {\n  let {\n    chainId,\n    name\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  const address = await provider.resolveName(name);\n\n  try {\n    return address ? getAddress(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\nasync function fetchEnsAvatar(_ref) {\n  let {\n    addressOrName,\n    chainId\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  }); // TODO: Update with more advanced logic\n  // https://github.com/ensdomains/ens-avatar\n\n  const avatar = await provider.getAvatar(addressOrName);\n  return avatar;\n}\n\nasync function fetchEnsName(_ref) {\n  let {\n    address,\n    chainId\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  return await provider.lookupAddress(address);\n}\n\nasync function fetchEnsResolver(_ref) {\n  let {\n    chainId,\n    name\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  const resolver = await provider.getResolver(name);\n  return resolver;\n}\n\nasync function fetchFeeData() {\n  let {\n    chainId,\n    formatUnits: units = 'wei'\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const feeData = await provider.getFeeData();\n  const formatted = {\n    gasPrice: feeData.gasPrice ? formatUnits(feeData.gasPrice, units) : null,\n    maxFeePerGas: feeData.maxFeePerGas ? formatUnits(feeData.maxFeePerGas, units) : null,\n    maxPriorityFeePerGas: feeData.maxPriorityFeePerGas ? formatUnits(feeData.maxPriorityFeePerGas, units) : null\n  };\n  return { ...feeData,\n    formatted\n  };\n}\n\nasync function fetchToken(_ref) {\n  let {\n    address,\n    chainId,\n    formatUnits: units = 'ether'\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  const contract = new Contract(address, erc20ABI, provider);\n  const [symbol, decimals, totalSupply] = await Promise.all([contract.symbol(), contract.decimals(), contract.totalSupply()]);\n  const token = {\n    address,\n    decimals,\n    symbol,\n    totalSupply: {\n      formatted: formatUnits(totalSupply, units),\n      value: totalSupply\n    }\n  };\n  return token;\n}\n\nasync function sendTransaction(args) {\n  try {\n    const signer = await fetchSigner();\n    if (!signer) throw new ConnectorNotFoundError();\n    const transaction = await signer.sendTransaction(args.request);\n    return transaction;\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function waitForTransaction(_ref) {\n  let {\n    chainId,\n    confirmations,\n    hash,\n    timeout,\n    wait: wait_\n  } = _ref;\n  let promise;\n\n  if (hash) {\n    const provider = getProvider({\n      chainId\n    });\n    promise = provider.waitForTransaction(hash, confirmations, timeout);\n  } else if (wait_) promise = wait_(confirmations);else throw new Error('hash or wait is required');\n\n  return await promise;\n}\n\nexport { configureChains, connect, disconnect, erc20ABI, erc721ABI, fetchBalance, fetchBlockNumber, fetchEnsAddress, fetchEnsAvatar, fetchEnsName, fetchEnsResolver, fetchFeeData, fetchSigner, fetchToken, getAccount, getContract, getNetwork, getProvider, getWebSocketProvider, readContract, sendTransaction, signMessage, signTypedData, switchNetwork, units, waitForTransaction, watchAccount, watchBlockNumber, watchContractEvent, watchNetwork, watchProvider, watchReadContract, watchSigner, watchWebSocketProvider, writeContract };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}