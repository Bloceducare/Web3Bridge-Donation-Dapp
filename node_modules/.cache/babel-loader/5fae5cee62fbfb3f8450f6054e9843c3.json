{"ast":null,"code":"import { providers } from 'ethers';\nimport { d as defaultAlchemyId } from '../../../dist/rpcs-7cfbd91c.esm.js';\n\nfunction alchemyProvider() {\n  let {\n    alchemyId = defaultAlchemyId,\n    pollingInterval,\n    priority,\n    stallTimeout,\n    weight\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (chain) {\n    if (!chain.rpcUrls.alchemy) return null;\n    return {\n      chain: { ...chain,\n        rpcUrls: { ...chain.rpcUrls,\n          default: \"\".concat(chain.rpcUrls.alchemy, \"/\").concat(alchemyId)\n        }\n      },\n      provider: () => {\n        const provider = new providers.AlchemyProvider(chain.id, alchemyId);\n        if (pollingInterval) provider.pollingInterval = pollingInterval;\n        return Object.assign(provider, {\n          priority,\n          stallTimeout,\n          weight\n        });\n      },\n      webSocketProvider: () => new providers.AlchemyWebSocketProvider(chain.id, alchemyId)\n    };\n  };\n}\n\nexport { alchemyProvider };","map":{"version":3,"names":["providers","d","defaultAlchemyId","alchemyProvider","alchemyId","pollingInterval","priority","stallTimeout","weight","arguments","length","undefined","chain","rpcUrls","alchemy","default","concat","provider","AlchemyProvider","id","Object","assign","webSocketProvider","AlchemyWebSocketProvider"],"sources":["/home/king-longs/Desktop/final/node_modules/@wagmi/core/providers/alchemy/dist/wagmi-core-providers-alchemy.esm.js"],"sourcesContent":["import { providers } from 'ethers';\nimport { d as defaultAlchemyId } from '../../../dist/rpcs-7cfbd91c.esm.js';\n\nfunction alchemyProvider() {\n  let {\n    alchemyId = defaultAlchemyId,\n    pollingInterval,\n    priority,\n    stallTimeout,\n    weight\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (chain) {\n    if (!chain.rpcUrls.alchemy) return null;\n    return {\n      chain: { ...chain,\n        rpcUrls: { ...chain.rpcUrls,\n          default: \"\".concat(chain.rpcUrls.alchemy, \"/\").concat(alchemyId)\n        }\n      },\n      provider: () => {\n        const provider = new providers.AlchemyProvider(chain.id, alchemyId);\n        if (pollingInterval) provider.pollingInterval = pollingInterval;\n        return Object.assign(provider, {\n          priority,\n          stallTimeout,\n          weight\n        });\n      },\n      webSocketProvider: () => new providers.AlchemyWebSocketProvider(chain.id, alchemyId)\n    };\n  };\n}\n\nexport { alchemyProvider };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,SAASC,CAAC,IAAIC,gBAAd,QAAsC,oCAAtC;;AAEA,SAASC,eAAT,GAA2B;EACzB,IAAI;IACFC,SAAS,GAAGF,gBADV;IAEFG,eAFE;IAGFC,QAHE;IAIFC,YAJE;IAKFC;EALE,IAMAC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EANxE;EAOA,OAAO,UAAUG,KAAV,EAAiB;IACtB,IAAI,CAACA,KAAK,CAACC,OAAN,CAAcC,OAAnB,EAA4B,OAAO,IAAP;IAC5B,OAAO;MACLF,KAAK,EAAE,EAAE,GAAGA,KAAL;QACLC,OAAO,EAAE,EAAE,GAAGD,KAAK,CAACC,OAAX;UACPE,OAAO,EAAE,GAAGC,MAAH,CAAUJ,KAAK,CAACC,OAAN,CAAcC,OAAxB,EAAiC,GAAjC,EAAsCE,MAAtC,CAA6CZ,SAA7C;QADF;MADJ,CADF;MAMLa,QAAQ,EAAE,MAAM;QACd,MAAMA,QAAQ,GAAG,IAAIjB,SAAS,CAACkB,eAAd,CAA8BN,KAAK,CAACO,EAApC,EAAwCf,SAAxC,CAAjB;QACA,IAAIC,eAAJ,EAAqBY,QAAQ,CAACZ,eAAT,GAA2BA,eAA3B;QACrB,OAAOe,MAAM,CAACC,MAAP,CAAcJ,QAAd,EAAwB;UAC7BX,QAD6B;UAE7BC,YAF6B;UAG7BC;QAH6B,CAAxB,CAAP;MAKD,CAdI;MAeLc,iBAAiB,EAAE,MAAM,IAAItB,SAAS,CAACuB,wBAAd,CAAuCX,KAAK,CAACO,EAA7C,EAAiDf,SAAjD;IAfpB,CAAP;EAiBD,CAnBD;AAoBD;;AAED,SAASD,eAAT"},"metadata":{},"sourceType":"module"}