{"ast":null,"code":"import { Subscribable } from \"./subscribable.mjs\";\nimport { isServer } from \"./utils.mjs\";\nexport class FocusManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onFocus => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus(); // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(focused => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n\n  setFocused(focused) {\n    this.focused = focused;\n\n    if (focused) {\n      this.onFocus();\n    }\n  }\n\n  onFocus() {\n    this.listeners.forEach(listener => {\n      listener();\n    });\n  }\n\n  isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  }\n\n}\nexport const focusManager = new FocusManager();","map":{"version":3,"names":["Subscribable","isServer","FocusManager","constructor","setup","onFocus","window","addEventListener","listener","removeEventListener","onSubscribe","cleanup","setEventListener","onUnsubscribe","hasListeners","_this$cleanup","call","undefined","_this$cleanup2","focused","setFocused","listeners","forEach","isFocused","document","includes","visibilityState","focusManager"],"sources":["/home/king-longs/Desktop/final/node_modules/react-query/lib/core/focusManager.mjs"],"sourcesContent":["import { Subscribable } from \"./subscribable.mjs\";\nimport { isServer } from \"./utils.mjs\";\nexport class FocusManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onFocus => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus(); // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(focused => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n\n  setFocused(focused) {\n    this.focused = focused;\n\n    if (focused) {\n      this.onFocus();\n    }\n  }\n\n  onFocus() {\n    this.listeners.forEach(listener => {\n      listener();\n    });\n  }\n\n  isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  }\n\n}\nexport const focusManager = new FocusManager();"],"mappings":"AAAA,SAASA,YAAT,QAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,MAAMC,YAAN,SAA2BF,YAA3B,CAAwC;EAC7CG,WAAW,GAAG;IACZ;;IAEA,KAAKC,KAAL,GAAaC,OAAO,IAAI;MACtB;MACA;MACA,IAAI,CAACJ,QAAD,IAAaK,MAAM,CAACC,gBAAxB,EAA0C;QACxC,MAAMC,QAAQ,GAAG,MAAMH,OAAO,EAA9B,CADwC,CACN;;;QAGlCC,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,EAA4CC,QAA5C,EAAsD,KAAtD;QACAF,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCC,QAAjC,EAA2C,KAA3C;QACA,OAAO,MAAM;UACX;UACAF,MAAM,CAACG,mBAAP,CAA2B,kBAA3B,EAA+CD,QAA/C;UACAF,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAoCD,QAApC;QACD,CAJD;MAKD;IACF,CAfD;EAgBD;;EAEDE,WAAW,GAAG;IACZ,IAAI,CAAC,KAAKC,OAAV,EAAmB;MACjB,KAAKC,gBAAL,CAAsB,KAAKR,KAA3B;IACD;EACF;;EAEDS,aAAa,GAAG;IACd,IAAI,CAAC,KAAKC,YAAL,EAAL,EAA0B;MACxB,IAAIC,aAAJ;;MAEA,CAACA,aAAa,GAAG,KAAKJ,OAAtB,KAAkC,IAAlC,GAAyC,KAAK,CAA9C,GAAkDI,aAAa,CAACC,IAAd,CAAmB,IAAnB,CAAlD;MACA,KAAKL,OAAL,GAAeM,SAAf;IACD;EACF;;EAEDL,gBAAgB,CAACR,KAAD,EAAQ;IACtB,IAAIc,cAAJ;;IAEA,KAAKd,KAAL,GAAaA,KAAb;IACA,CAACc,cAAc,GAAG,KAAKP,OAAvB,KAAmC,IAAnC,GAA0C,KAAK,CAA/C,GAAmDO,cAAc,CAACF,IAAf,CAAoB,IAApB,CAAnD;IACA,KAAKL,OAAL,GAAeP,KAAK,CAACe,OAAO,IAAI;MAC9B,IAAI,OAAOA,OAAP,KAAmB,SAAvB,EAAkC;QAChC,KAAKC,UAAL,CAAgBD,OAAhB;MACD,CAFD,MAEO;QACL,KAAKd,OAAL;MACD;IACF,CANmB,CAApB;EAOD;;EAEDe,UAAU,CAACD,OAAD,EAAU;IAClB,KAAKA,OAAL,GAAeA,OAAf;;IAEA,IAAIA,OAAJ,EAAa;MACX,KAAKd,OAAL;IACD;EACF;;EAEDA,OAAO,GAAG;IACR,KAAKgB,SAAL,CAAeC,OAAf,CAAuBd,QAAQ,IAAI;MACjCA,QAAQ;IACT,CAFD;EAGD;;EAEDe,SAAS,GAAG;IACV,IAAI,OAAO,KAAKJ,OAAZ,KAAwB,SAA5B,EAAuC;MACrC,OAAO,KAAKA,OAAZ;IACD,CAHS,CAGR;;;IAGF,IAAI,OAAOK,QAAP,KAAoB,WAAxB,EAAqC;MACnC,OAAO,IAAP;IACD;;IAED,OAAO,CAACP,SAAD,EAAY,SAAZ,EAAuB,WAAvB,EAAoCQ,QAApC,CAA6CD,QAAQ,CAACE,eAAtD,CAAP;EACD;;AA5E4C;AA+E/C,OAAO,MAAMC,YAAY,GAAG,IAAIzB,YAAJ,EAArB"},"metadata":{},"sourceType":"module"}