{"ast":null,"code":"import { Subscribable } from \"./subscribable.mjs\";\nimport { isServer } from \"./utils.mjs\";\nexport class OnlineManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onOnline => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline(); // Listen to online\n\n\n        window.addEventListener('online', listener, false);\n        window.addEventListener('offline', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', listener);\n          window.removeEventListener('offline', listener);\n        };\n      }\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(online => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online);\n      } else {\n        this.onOnline();\n      }\n    });\n  }\n\n  setOnline(online) {\n    this.online = online;\n\n    if (online) {\n      this.onOnline();\n    }\n  }\n\n  onOnline() {\n    this.listeners.forEach(listener => {\n      listener();\n    });\n  }\n\n  isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  }\n\n}\nexport const onlineManager = new OnlineManager();","map":{"version":3,"names":["Subscribable","isServer","OnlineManager","constructor","setup","onOnline","window","addEventListener","listener","removeEventListener","onSubscribe","cleanup","setEventListener","onUnsubscribe","hasListeners","_this$cleanup","call","undefined","_this$cleanup2","online","setOnline","listeners","forEach","isOnline","navigator","onLine","onlineManager"],"sources":["/home/king-longs/Desktop/final/node_modules/react-query/lib/core/onlineManager.mjs"],"sourcesContent":["import { Subscribable } from \"./subscribable.mjs\";\nimport { isServer } from \"./utils.mjs\";\nexport class OnlineManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onOnline => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline(); // Listen to online\n\n\n        window.addEventListener('online', listener, false);\n        window.addEventListener('offline', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', listener);\n          window.removeEventListener('offline', listener);\n        };\n      }\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(online => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online);\n      } else {\n        this.onOnline();\n      }\n    });\n  }\n\n  setOnline(online) {\n    this.online = online;\n\n    if (online) {\n      this.onOnline();\n    }\n  }\n\n  onOnline() {\n    this.listeners.forEach(listener => {\n      listener();\n    });\n  }\n\n  isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  }\n\n}\nexport const onlineManager = new OnlineManager();"],"mappings":"AAAA,SAASA,YAAT,QAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,MAAMC,aAAN,SAA4BF,YAA5B,CAAyC;EAC9CG,WAAW,GAAG;IACZ;;IAEA,KAAKC,KAAL,GAAaC,QAAQ,IAAI;MACvB;MACA;MACA,IAAI,CAACJ,QAAD,IAAaK,MAAM,CAACC,gBAAxB,EAA0C;QACxC,MAAMC,QAAQ,GAAG,MAAMH,QAAQ,EAA/B,CADwC,CACL;;;QAGnCC,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,QAAlC,EAA4C,KAA5C;QACAF,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCC,QAAnC,EAA6C,KAA7C;QACA,OAAO,MAAM;UACX;UACAF,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,QAArC;UACAF,MAAM,CAACG,mBAAP,CAA2B,SAA3B,EAAsCD,QAAtC;QACD,CAJD;MAKD;IACF,CAfD;EAgBD;;EAEDE,WAAW,GAAG;IACZ,IAAI,CAAC,KAAKC,OAAV,EAAmB;MACjB,KAAKC,gBAAL,CAAsB,KAAKR,KAA3B;IACD;EACF;;EAEDS,aAAa,GAAG;IACd,IAAI,CAAC,KAAKC,YAAL,EAAL,EAA0B;MACxB,IAAIC,aAAJ;;MAEA,CAACA,aAAa,GAAG,KAAKJ,OAAtB,KAAkC,IAAlC,GAAyC,KAAK,CAA9C,GAAkDI,aAAa,CAACC,IAAd,CAAmB,IAAnB,CAAlD;MACA,KAAKL,OAAL,GAAeM,SAAf;IACD;EACF;;EAEDL,gBAAgB,CAACR,KAAD,EAAQ;IACtB,IAAIc,cAAJ;;IAEA,KAAKd,KAAL,GAAaA,KAAb;IACA,CAACc,cAAc,GAAG,KAAKP,OAAvB,KAAmC,IAAnC,GAA0C,KAAK,CAA/C,GAAmDO,cAAc,CAACF,IAAf,CAAoB,IAApB,CAAnD;IACA,KAAKL,OAAL,GAAeP,KAAK,CAACe,MAAM,IAAI;MAC7B,IAAI,OAAOA,MAAP,KAAkB,SAAtB,EAAiC;QAC/B,KAAKC,SAAL,CAAeD,MAAf;MACD,CAFD,MAEO;QACL,KAAKd,QAAL;MACD;IACF,CANmB,CAApB;EAOD;;EAEDe,SAAS,CAACD,MAAD,EAAS;IAChB,KAAKA,MAAL,GAAcA,MAAd;;IAEA,IAAIA,MAAJ,EAAY;MACV,KAAKd,QAAL;IACD;EACF;;EAEDA,QAAQ,GAAG;IACT,KAAKgB,SAAL,CAAeC,OAAf,CAAuBd,QAAQ,IAAI;MACjCA,QAAQ;IACT,CAFD;EAGD;;EAEDe,QAAQ,GAAG;IACT,IAAI,OAAO,KAAKJ,MAAZ,KAAuB,SAA3B,EAAsC;MACpC,OAAO,KAAKA,MAAZ;IACD;;IAED,IAAI,OAAOK,SAAP,KAAqB,WAArB,IAAoC,OAAOA,SAAS,CAACC,MAAjB,KAA4B,WAApE,EAAiF;MAC/E,OAAO,IAAP;IACD;;IAED,OAAOD,SAAS,CAACC,MAAjB;EACD;;AA3E6C;AA8EhD,OAAO,MAAMC,aAAa,GAAG,IAAIxB,aAAJ,EAAtB"},"metadata":{},"sourceType":"module"}