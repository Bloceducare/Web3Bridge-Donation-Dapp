{"ast":null,"code":"import { notifyManager } from \"./notifyManager.mjs\";\nimport { Mutation } from \"./mutation.mjs\";\nimport { matchMutation, noop } from \"./utils.mjs\";\nimport { Subscribable } from \"./subscribable.mjs\"; // TYPES\n// CLASS\n\nexport class MutationCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.mutations = [];\n    this.mutationId = 0;\n  }\n\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined,\n      meta: options.meta\n    });\n    this.add(mutation);\n    return mutation;\n  }\n\n  add(mutation) {\n    this.mutations.push(mutation);\n    this.notify({\n      type: 'added',\n      mutation\n    });\n  }\n\n  remove(mutation) {\n    this.mutations = this.mutations.filter(x => x !== mutation);\n    this.notify({\n      type: 'removed',\n      mutation\n    });\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.mutations.forEach(mutation => {\n        this.remove(mutation);\n      });\n    });\n  }\n\n  getAll() {\n    return this.mutations;\n  }\n\n  find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(mutation => matchMutation(filters, mutation));\n  }\n\n  findAll(filters) {\n    return this.mutations.filter(mutation => matchMutation(filters, mutation));\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(listener => {\n        listener(event);\n      });\n    });\n  }\n\n  resumePausedMutations() {\n    const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n    return notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(noop)), Promise.resolve()));\n  }\n\n}","map":{"version":3,"names":["notifyManager","Mutation","matchMutation","noop","Subscribable","MutationCache","constructor","config","mutations","mutationId","build","client","options","state","mutation","mutationCache","logger","getLogger","defaultMutationOptions","defaultOptions","mutationKey","getMutationDefaults","undefined","meta","add","push","notify","type","remove","filter","x","clear","batch","forEach","getAll","find","filters","exact","findAll","event","listeners","listener","resumePausedMutations","pausedMutations","isPaused","reduce","promise","then","continue","catch","Promise","resolve"],"sources":["/home/king-longs/Desktop/final/node_modules/react-query/lib/core/mutationCache.mjs"],"sourcesContent":["import { notifyManager } from \"./notifyManager.mjs\";\nimport { Mutation } from \"./mutation.mjs\";\nimport { matchMutation, noop } from \"./utils.mjs\";\nimport { Subscribable } from \"./subscribable.mjs\"; // TYPES\n\n// CLASS\nexport class MutationCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.mutations = [];\n    this.mutationId = 0;\n  }\n\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined,\n      meta: options.meta\n    });\n    this.add(mutation);\n    return mutation;\n  }\n\n  add(mutation) {\n    this.mutations.push(mutation);\n    this.notify({\n      type: 'added',\n      mutation\n    });\n  }\n\n  remove(mutation) {\n    this.mutations = this.mutations.filter(x => x !== mutation);\n    this.notify({\n      type: 'removed',\n      mutation\n    });\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.mutations.forEach(mutation => {\n        this.remove(mutation);\n      });\n    });\n  }\n\n  getAll() {\n    return this.mutations;\n  }\n\n  find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(mutation => matchMutation(filters, mutation));\n  }\n\n  findAll(filters) {\n    return this.mutations.filter(mutation => matchMutation(filters, mutation));\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(listener => {\n        listener(event);\n      });\n    });\n  }\n\n  resumePausedMutations() {\n    const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n    return notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(noop)), Promise.resolve()));\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}